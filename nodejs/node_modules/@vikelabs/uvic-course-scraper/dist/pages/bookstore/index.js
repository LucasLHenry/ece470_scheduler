"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.textbookExtractor = void 0;
var BASE_URL = 'https://www.uvicbookstore.ca';
var subjectAndCodeRegex = /(.*) (\w\d{2})?/;
var sectionRegex = /(A\d{2}|B\d{2}|T\d{2})/;
var multipleSectionRegex = /((?:A\d{2}|B\d{2}|T\d{2})\/?){2,}/;
var authorRegex = /Author: (.*)$/;
var digitalAccessRegex = /^Digital Access: (\$.*$)/;
var newBookRegex = /^New Book: (\$.*$)/;
var usedBookRegex = /^Used Book: (\$.*$)/;
var newAndDigitalAccessRegex = /^New Book \+ Digital Access: (\$.*$)/;
var instructorRegex = /Instructor: (.*)$/;
var textbookExtractor = function ($) {
    var courseTextbooks = [];
    var courseDivs = $('div[class="row course"]');
    courseDivs.each(function (_, el) {
        var _a, _b, _c, _d, _e, _f;
        var courseDiv = $(el);
        var subjectAndCode = (_a = subjectAndCodeRegex.exec(courseDiv.find('div[class="six columns"]').text().trim())) === null || _a === void 0 ? void 0 : _a[0];
        var subjectAndCodeArray = subjectAndCode === null || subjectAndCode === void 0 ? void 0 : subjectAndCode.split(' ');
        var subject = (_b = subjectAndCodeArray === null || subjectAndCodeArray === void 0 ? void 0 : subjectAndCodeArray[0]) !== null && _b !== void 0 ? _b : '';
        var code = (_c = subjectAndCodeArray === null || subjectAndCodeArray === void 0 ? void 0 : subjectAndCodeArray[1]) !== null && _c !== void 0 ? _c : '';
        var textbooks = [];
        var textbooksDiv = courseDiv.find('.textbook-item');
        textbooksDiv.each(function (_, el) {
            var _a;
            var textbookDiv = $(el);
            var bookstoreUrl = BASE_URL + textbookDiv.find('.textbook-image-container').find('a').attr('href');
            var imageUrl = BASE_URL + textbookDiv.find('.textbook-image-container').find('a > img').attr('src');
            var title = textbookDiv.find('.textbook-results-title').text().trim();
            var authorsText = (_a = authorRegex.exec(textbookDiv.find('span.textbook-results-author').text().trim())) === null || _a === void 0 ? void 0 : _a[1];
            var authors = authorsText === null || authorsText === void 0 ? void 0 : authorsText.split(',').map(function (author) { return author.trim(); });
            var required = textbookDiv.find('.required-tag').text() ? true : false;
            var isbn = textbookDiv.find('.textbook-results-skew').text().trim();
            var prices = textbookDiv.find('.textbook-results-price');
            var price = {};
            prices.each(function (_, el) {
                var _a, _b, _c, _d, _e, _f, _g, _h;
                var priceSpan = $(el);
                if ((_a = newBookRegex.exec(priceSpan.text().trim())) === null || _a === void 0 ? void 0 : _a[1])
                    price.newCad = (_b = newBookRegex.exec(priceSpan.text().trim())) === null || _b === void 0 ? void 0 : _b[1];
                if ((_c = digitalAccessRegex.exec(priceSpan.text().trim())) === null || _c === void 0 ? void 0 : _c[1])
                    price.digitalAccessCad = (_d = digitalAccessRegex.exec(priceSpan.text().trim())) === null || _d === void 0 ? void 0 : _d[1];
                if ((_e = usedBookRegex.exec(priceSpan.text().trim())) === null || _e === void 0 ? void 0 : _e[1])
                    price.usedCad = (_f = usedBookRegex.exec(priceSpan.text().trim())) === null || _f === void 0 ? void 0 : _f[1];
                if ((_g = newAndDigitalAccessRegex.exec(priceSpan.text().trim())) === null || _g === void 0 ? void 0 : _g[1])
                    price.newAndDigitalAccessCad = (_h = newAndDigitalAccessRegex.exec(priceSpan.text().trim())) === null || _h === void 0 ? void 0 : _h[1];
            });
            textbooks.push({ bookstoreUrl: bookstoreUrl, imageUrl: imageUrl, title: title, authors: authors, required: required, price: price, isbn: isbn });
        });
        var additionalInfo = [];
        var additionalInfoHtml = courseDiv.find('.course-comment');
        additionalInfoHtml.each(function (_, el) {
            var infoHtml = $(el);
            additionalInfo.push(infoHtml.text().trim());
        });
        var instructor = (_d = instructorRegex.exec(courseDiv.find('.textbook-results-instructor').text().trim())) === null || _d === void 0 ? void 0 : _d[1];
        if (multipleSectionRegex.test(courseDiv.find("h3:contains(\"" + subject + " " + code + "\")").text().trim())) {
            var sections = (_e = multipleSectionRegex.exec(courseDiv.find("h3:contains(\"" + subject + " " + code + "\")").text().trim())) === null || _e === void 0 ? void 0 : _e[0];
            sections === null || sections === void 0 ? void 0 : sections.split('/').forEach(function (section) { return courseTextbooks.push({ subject: subject, code: code, section: section, textbooks: textbooks, additionalInfo: additionalInfo, instructor: instructor }); });
        }
        else {
            var section = (_f = sectionRegex.exec(courseDiv.find("h3:contains(\"" + subject + " " + code + "\")").text().trim())) === null || _f === void 0 ? void 0 : _f[0];
            courseTextbooks.push({ subject: subject, code: code, section: section, textbooks: textbooks, additionalInfo: additionalInfo, instructor: instructor });
        }
    });
    return courseTextbooks;
};
exports.textbookExtractor = textbookExtractor;
