export interface Response<T> {
    response: T;
    timestamp: Date;
    url: string;
}
export interface SubjectCode {
    name: string;
    description: string;
    id: string;
    linkedGroup: string;
}
export interface KualiSubject {
    subject: string;
    title: string;
}
export interface KualiCourseCatalog {
    __catalogCourseId: string;
    __passedCatalogQuery: boolean;
    dateStart: string;
    pid: string;
    id: string;
    title: string;
    subjectCode: SubjectCode;
    catalogActivationDate: string;
    _score: number;
}
export interface KualiCourseItem extends KualiCourseCatalog {
    description: string;
    supplementalNotes?: string;
    formerlyNotesText?: string;
    allGradingTypes?: {
        [key: string]: string;
    };
    proForma: string;
    credits: {
        credits: {
            min: string;
            max: string;
        };
        value: string | {
            min: string;
            max: string;
        };
        chosen: string;
    };
    crossListedCourses?: {
        __catalogCourseId: string;
        pid: string;
        title: string;
    }[];
    hoursCatalogText?: string;
    repeatableCatalogText?: string;
    preAndCorequisites?: string;
    preOrCorequisites?: string;
}
export declare type KualiCourseItemParsed = Omit<KualiCourseItem, 'hoursCatalogText' | 'preAndCorequisites' | 'preOrCorequisites'> & {
    hoursCatalog?: {
        lecture: string;
        tutorial: string;
        lab: string;
    }[];
    preAndCorequisites?: Array<NestedPreCoRequisites | Course | string>;
    preOrCorequisites?: Array<NestedPreCoRequisites | Course | string>;
};
export declare type Course = {
    subject: string;
    code: string;
    pid?: string;
};
export declare type NestedPreCoRequisites = {
    quantity?: number | 'ALL';
    coreq?: boolean;
    units?: boolean;
    grade?: string;
    gpa?: string;
    unparsed?: string;
    reqList?: Array<NestedPreCoRequisites | Course | string>;
};
export declare type levelType = 'law' | 'undergraduate' | 'graduate';
export declare type sectionType = 'lecture' | 'lab' | 'tutorial' | 'gradable lab' | 'lecture topic';
export declare type classification = 'YEAR_1' | 'YEAR_2' | 'YEAR_3' | 'YEAR_4' | 'YEAR_5' | 'unclassified';
export interface MeetingTimes {
    type: string;
    time: string;
    days: string;
    where: string;
    dateRange: string;
    scheduleType: string;
    instructors: string[];
}
export interface ClassScheduleListing {
    title: string;
    crn: string;
    sectionCode: string;
    additionalNotes?: string;
    associatedTerm: {
        start: string;
        end: string;
    };
    registrationDates: {
        start: string;
        end: string;
    };
    levels: levelType[];
    campus: 'online' | 'in-person';
    sectionType: sectionType;
    instructionalMethod: string;
    credits: string;
    meetingTimes: MeetingTimes[];
}
export interface Seating {
    capacity: number;
    actual: number;
    remaining: number;
}
export interface Requirements {
    level: levelType[];
    fieldOfStudy?: string[];
    classification?: classification[];
    negClassification?: classification[];
    degree?: string[];
    program?: string[];
    negProgram?: string[];
    college?: string[];
    negCollege?: string[];
    major?: string[];
}
export interface requirementObject {
    known: true | false;
    requirement: string;
    idx: number;
}
export interface DetailedClassInformation {
    title: string;
    seats: Seating;
    waitListSeats: Seating;
    requirements?: Requirements;
}
export interface DetailedClassInformationRes {
    data: DetailedClassInformation;
    timestamp: string;
    url: string;
}
export declare type Textbook = {
    bookstoreUrl?: string;
    imageUrl?: string;
    title: string;
    authors?: string[];
    required: boolean;
    price: {
        newCad?: string;
        usedCad?: string;
        digitalAccessCad?: string;
        newAndDigitalAccessCad?: string;
    };
    isbn?: string;
    instructor?: string;
};
export declare type CourseTextbooks = {
    subject: string;
    code: string;
    section?: string;
    additionalInfo?: string[];
    instructor?: string;
    textbooks: Textbook[];
};
export declare type BuildingInfo = {
    title: string;
    long?: string;
    short?: string;
    url?: string;
};
