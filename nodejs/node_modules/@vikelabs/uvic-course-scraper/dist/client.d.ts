import { KualiCourseCatalog, DetailedClassInformation, ClassScheduleListing, KualiSubject, Response, KualiCourseItemParsed, BuildingInfo } from './types';
export declare class UVicCourseScraper {
    private static subjectCodeToPidMap;
    /**
     * Gets all courses from the Kuali catalog. Automatically uses the current term if not defined.
     * @param term i.e. '202009', '202101'
     */
    static getCourses(term?: string): Promise<Response<KualiCourseCatalog[]>>;
    private static subjectCodeToPidMapper;
    /**
     * Maps a subject and code to pid then gets course details from Kuali
     *
     * @param term i.e. '202009', '202101'
     * @param subject ie. 'CSC'
     * @param code ie. '111'
     */
    getCourseDetails(term: string | undefined, subject: string, code: string): Promise<Response<KualiCourseItemParsed> | void>;
    /**
     * Gets details of a single course from Kuali by pid
     *
     * @param term i.e. '202009', '202101'
     * @param pid ie. 'ByS23Pp7E'
     */
    static getCourseDetailsByPid(term: string | undefined, pid: string): Promise<Response<KualiCourseItemParsed>>;
    /**
     * Gets all sections for a course in a given term from BAN1P
     *
     * @param term i.e. '202009'
     * @param subject i.e. 'SENG', 'ECON'
     * @param code i.e. '180', '225'
     */
    static getCourseSections(term: string | undefined, subject: string, code: string): Promise<Response<ClassScheduleListing[]>>;
    /**
     * Gets seats and waitList seats for a given course section from BAN1P
     *
     * @param term i.e. '202009', '202101'
     * @param crn ie. '12345', '20001'
     */
    static getSectionSeats(term: string, crn: string): Promise<Response<DetailedClassInformation>>;
    /**
     * Gets all subjects from the BAN1P. Automatically uses the current term if not defined.
     * @param term i.e. '202009', '202101'
     */
    static getSubjects(term?: string): Promise<KualiSubject[]>;
    /**
     * Gets all the buildings on the UVic campus along with their full form and short form (abbreviation) and URL for more details.
     * @returns an array of BuildingInfo
     */
    static getBuildings(): Promise<Response<BuildingInfo[]>>;
}
