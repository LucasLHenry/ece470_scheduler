"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCatalogIdForTerm = exports.getCurrentTerm = exports.getCurrentTerms = void 0;
var dayjs_1 = __importDefault(require("dayjs"));
var term;
(function (term) {
    term[term["01"] = 0] = "01";
    term[term["05"] = 1] = "05";
    term[term["09"] = 2] = "09";
})(term || (term = {}));
function monthToTerm(month) {
    if (month < 1 || month > 12) {
        throw new Error(month + " is Not a valid month");
    }
    if (1 <= month && month < 5) {
        return term['01'];
    }
    else if (5 <= month && month < 9) {
        return term['05'];
    }
    else {
        return term['09'];
    }
}
function mod(n, m) {
    return ((n % m) + m) % m;
}
function getTermString(currentYear, currentTerm, delta) {
    var termNumber = currentTerm.valueOf() + delta;
    currentYear += Math.floor(termNumber / 3);
    currentTerm = mod(termNumber, 3);
    return currentYear.toString() + term[currentTerm].toString();
}
function getCurrentTerms(plusMinus) {
    var currentTime = new Date();
    var currentYear = currentTime.getFullYear();
    var currentMonth = currentTime.getMonth() + 1;
    var currentTerm = monthToTerm(currentMonth);
    var terms = [];
    for (var delta = 1; delta <= plusMinus; delta++) {
        terms.push(getTermString(currentYear, currentTerm, delta));
        terms.push(getTermString(currentYear, currentTerm, -1 * delta));
    }
    terms.push(getTermString(currentYear, currentTerm, 0));
    return terms.sort();
}
exports.getCurrentTerms = getCurrentTerms;
function getCurrentTerm(date) {
    if (date === void 0) { date = (0, dayjs_1.default)(); }
    var year = date.year().toString();
    var currMonth = date.month();
    var month = '';
    if (0 <= currMonth && currMonth < 4) {
        month = '01';
    }
    else if (4 <= currMonth && currMonth < 10) {
        month = '05';
    }
    else {
        month = '09';
    }
    return year + month;
}
exports.getCurrentTerm = getCurrentTerm;
// https://uvic.kuali.co/api/v1/catalog/public/catalogs/
function getCatalogIdForTerm(term) {
    switch (term) {
        case '202009':
            return '5d9ccc4eab7506001ae4c225';
        case '202101':
            return '5f21b66d95f09c001ac436a0';
        case '202105':
            return '5ff357f8d30280001b0c26dd';
        case '202109':
            return '6092db6ebae543001bc23ca1';
        case '202201':
            return '61325cd1a7d5ec3519bf62a0';
        case '202205':
            return '61a51d59910ba59a0464f787';
        case '202209':
            return '620d23ca4bbc91fd3dbe3f64';
        case '202301':
            // TODO: remove when catalog is updated
            return '620d23ca4bbc91fd3dbe3f64';
        case '202305':
            return '63580b862ddbf3001d4805b5';
        case '202309':
            return '63f510ea5295ea001cb85899';
        case '202401':
            // TODO: remove when catalog is updated
            return '63f510ea5295ea001cb85899';
        default:
            return '';
    }
}
exports.getCatalogIdForTerm = getCatalogIdForTerm;
